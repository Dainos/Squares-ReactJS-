{"version":3,"sources":["Squares.js","Buttons.js","App.js","serviceWorker.js","index.js"],"names":["Squares","state","currentRow","currentColumn","mouseOnHandler","props","hideRemoveBtns","mouseOutHandler","setCurrentRow","index","setState","setCurrentcolumn","event","updateCurrentPosition","className","onMouseOut","this","onMouseOver","table","map","row","key","cell","Component","defaultProps","initialHeight","initialWidth","RemoveButton","type","stylesRemoveRow","join","style","top","onMouseDown","removeRow","bind","stylesRemoveColumn","left","removeColumn","AddButton","stylesAddRow","stylesAddColumn","addRow","addColumn","App","timerId","i","j","push","rowsAmount","columnsAmount","splice","forEach","length","position","status","setTimeout","clearTimeout","Boolean","window","location","hostname","match","ReactDOM","render","cellSize","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a243f17.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass Squares extends Component {\n\n    state = {\n        currentRow: null,\n        currentColumn: null,\n\n    }\n\n    mouseOnHandler = () => {\n\n        this.props.hideRemoveBtns(false);\n        \n    }\n\n    mouseOutHandler = () => {\n        this.props.hideRemoveBtns(true);\n    }\n\n\n    setCurrentRow = index => {\n        this.setState({currentRow: index});\n    }\n\n    setCurrentcolumn = (index, event) => {\n        this.setState({currentColumn: index}, () => this.props.updateCurrentPosition(this.state, event));\n        \n    }\n\n\n    render() {\n        \n        return (\n            <div className = 'div-table' onMouseOut = {this.mouseOutHandler} onMouseOver = {this.mouseOnHandler}  >\n                {this.props.table.map((row, index) => \n                <div className = \"row\" key = {index+1} onMouseOver = {(event) => this.setCurrentRow(index+1, event)}>\n                    {this.props.table[0].map ((cell, index) => <div className = \"cell\" key = {cell+1} onMouseOver = {(event) => this.setCurrentcolumn(index+1, event)}>                        \n                    </div>)}\n                </div>)}  \n            </div>            \n        );\n    }\n    \n}\n\nSquares.propTypes = {\n    table: PropTypes.array.isRequired\n}\n\nSquares.defaultProps = {\n    initialHeight: 4,\n    initialWidth: 4\n}\n\nexport default Squares;","import React, {Component} from 'react';\nimport './style.css';\n\n\n\nclass RemoveButton extends Component {\n\n    mouseOnHandler = () => {\n        this.props.hideRemoveBtns(false);   \n    }\n\n    mouseOutHandler = () => {\n        this.props.hideRemoveBtns(true);\n    }\n    \n    render() {\n        return (\n            this.props.type === 'remove-row' \n            ?  <button className={this.props.stylesRemoveRow.join(\" \")} style ={{top: `${2 + (this.props.currentRow-1)*52 }px`}} onMouseDown = {this.props.removeRow.bind(this, 0)} onMouseOut = {this.mouseOutHandler} onMouseOver = {this.mouseOnHandler}>–</button>\n            :  <button className={this.props.stylesRemoveColumn.join(\" \")} style ={{left: `${2+(this.props.currentColumn-1)*52 }px`}} onMouseDown = {this.props.removeColumn} onMouseOut = {this.mouseOutHandler} onMouseOver = {this.mouseOnHandler}>–</button>\n        )  \n    }    \n}\n\n\nclass AddButton extends Component {\n\n    constructor () {\n        super();\n        this.stylesAddRow = [\"btn\", \"add-btn\", \"add-row-btn\"];\n        this.stylesAddColumn = [\"btn\", \"add-btn\", \"add-column-btn\"];\n    }\n\n    render() {\n        return (\n            this.props.type === 'add-row' \n            ?  <button className={this.stylesAddRow.join(\" \")} onMouseDown = {this.props.addRow}>+</button>\n            :  <button className={this.stylesAddColumn.join(\" \")} onMouseDown = {this.props.addColumn}>+</button>\n        )        \n    }\n\n}\n\nexport {\n    AddButton,\n    RemoveButton\n};","import React, {Component} from 'react';\nimport Squares from './Squares';\nimport {AddButton, RemoveButton} from './Buttons';\nimport './style.css';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    \n    super(props);\n\n    this.table = [];\n    this.timerId = null;\n\n    for (let i = 0; i < props.initialHeight; i++) {\n      let row = [];\n      for (let j = 0; j < props.initialWidth; j++) {\n        row.push(j + 1)\n      }\n      this.table.push(row);\n    }\n\n    this.state = {\n      rowsAmount: props.initialHeight,\n      columnsAmount: props.initialWidth,\n      table: this.table,\n      currentRow: 0,\n      currentColumn: 0,\n\n      stylesRemoveRow: [\"btn\", \"remove-btn\", \"remove-row-btn hide\"],\n      stylesRemoveColumn: [\"btn\", \"remove-btn\", \"remove-column-btn hide\"]\n\n    }\n\n  }\n\n\n  addRow () {\n    this.table = this.state.table;\n    const row = [];\n    for (let i = 0; i < this.state.columnsAmount; i++) row.push(i+1);\n    this.table.push(row);\n    this.setState({\n      rowsAmount: this.state.rowsAmount + 1,\n      table: this.table\n    })\n  }\n\n  removeRow () {\n    if (this.state.rowsAmount === 1) return;\n    this.table = this.state.table;\n    this.table.splice(this.state.currentRow - 1, 1);\n    if (this.state.rowsAmount === this.state.currentRow) this.setState ({currentRow: this.state.currentRow - 1})\n    this.setState({\n      rowsAmount: this.state.rowsAmount - 1,\n      table: this.table\n    })\n    this.hideRemoveBtns(\"fast remove\")\n  }\n\n  addColumn() {\n    this.table = this.state.table;\n    this.table.forEach((row, index) => {\n      row.push(row.length+1);\n    });\n    \n    this.setState({\n      columnsAmount: this.state.columnsAmount + 1,\n      table: this.table\n    })\n\n  }\n\n  removeColumn (number = 0) {\n    if (this.state.columnsAmount === 1) return;\n    this.table = this.state.table;\n    this.table.forEach((row) => {\n      row.splice(this.state.currentColumn - 1, 1);\n    });\n    if (this.state.columnsAmount === this.state.currentColumn) this.setState ({currentColumn: this.state.currentColumn - 1})\n    \n    this.setState({\n      columnsAmount: this.state.columnsAmount - 1,      \n      table: this.table\n    })\n    this.hideRemoveBtns(\"fast remove\")\n  }\n\n  updateCurrentPosition(position, event) {\n      this.setState({\n        currentRow: position.currentRow,\n        currentColumn: position.currentColumn\n      })\n  }\n\n  hideRemoveBtns(status) {\n      if (status === \"fast remove\") {\n        this.setState({\n          stylesRemoveRow: [\"btn\", \"remove-btn\", \"remove-row-btn hide\"],\n          stylesRemoveColumn: [\"btn\", \"remove-btn\", \"remove-column-btn hide\"]\n        })\n        return\n      }\n      if (status) {              \n        this.timerId = setTimeout(() => {\n          this.setState({\n            stylesRemoveRow: [\"btn\", \"remove-btn\", \"remove-row-btn hide\"],\n            stylesRemoveColumn: [\"btn\", \"remove-btn\", \"remove-column-btn hide\"]\n          })\n      }, 200);        \n      }\n      else {\n        this.setState({\n          stylesRemoveRow: [\"btn\", \"remove-btn\", \"remove-row-btn\"],\n          stylesRemoveColumn: [\"btn\", \"remove-btn\", \"remove-column-btn\"]\n        })\n        clearTimeout(this.timerId);\n        if (this.state.columnsAmount === 1) this.setState({stylesRemoveColumn: [\"btn\", \"remove-btn\", \"remove-column-btn hide\"]})\n        if (this.state.rowsAmount === 1) this.setState({stylesRemoveRow: [\"btn\", \"remove-btn\", \"remove-row-btn hide\"]})\n\n      }\n  }\n   \n\n  render(){\n    return (\n      <table>\n        <tbody>\n          <tr className=\"tablerow\">\n              <td></td>\n              <td><RemoveButton type = \"remove-column\" currentRow = {this.state.currentRow} currentColumn = {this.state.currentColumn} removeColumn = {this.removeColumn.bind(this)} stylesRemoveColumn = {this.state.stylesRemoveColumn} hideRemoveBtns = {this.hideRemoveBtns.bind(this)}/></td>\n              <td></td>\n          </tr>\n          <tr className=\"tablerow\">\n              <td className=\"tablecolumn\"><RemoveButton type = \"remove-row\" currentRow = {this.state.currentRow} currentColumn = {this.state.currentColumn} removeRow = {this.removeRow.bind(this)} stylesRemoveRow = {this.state.stylesRemoveRow} hideRemoveBtns = {this.hideRemoveBtns.bind(this)}/></td>\n              <td><Squares table = {this.state.table} updateCurrentPosition = {this.updateCurrentPosition.bind(this)} hideRemoveBtns = {this.hideRemoveBtns.bind(this)}/></td>\n              <td><AddButton type = \"add-column\" addColumn = {this.addColumn.bind(this)}/></td>\n          </tr>\n          <tr><td></td><td><AddButton type = \"add-row\" addRow = {this.addRow.bind(this)}/></td><td></td></tr>\n        </tbody>\n      </table>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App initialWidth = {4} initialHeight = {4} cellSize = {50}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}